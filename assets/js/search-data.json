{
  
    
        "post0": {
            "title": "Understanding Entropy in Data Science",
            "content": "!pip install -Uqq fastbook . import numpy as np from collections import Counter from fastbook import * import matplotlib.pyplot as plt import seaborn as sns %matplotlib inline %config InlineBackend.figure_format=&#39;retina&#39; . Defining Surprise . In order to talk about entropy, first we will have to understand surprise. . basket_red = np.array([&#39;🍎&#39;, &#39;🍎&#39;, &#39;🍎&#39;, &#39;🍎&#39;, &#39;🍎&#39;, &#39;🍎&#39;, &#39;🍑&#39; ]) # 6 apples &amp; 1 peach. basket_green = np.array([&#39;🍑&#39; , &#39;🍑&#39; , &#39;🍑&#39; , &#39;🍑&#39; , &#39;🍑&#39; , &#39;🍑&#39; , &#39;🍑&#39; , &#39;🍑&#39; , &#39;🍑&#39;, &#39;🍎&#39;]) # 9 peaches &amp; 1 apple. basket_white = np.array([&#39;🍎&#39;, &#39;🍑&#39;, &#39;🍎&#39;, &#39;🍑&#39;, &#39;🍎&#39;, &#39;🍑&#39;, &#39;🍎&#39;, &#39;🍑&#39;, &#39;🍎&#39;, &#39;🍑&#39;]) # 5 zeros &amp; 5 ones. . ones_counter = Counter(basket_red) ones_counter . Counter({&#39;🍎&#39;: 6, &#39;🍑&#39;: 1}) . ones_counter[&#39;🍎&#39;] . 1 . ones_counter = Counter(ones) p_1_ones = ones_counter[1] / len(ones) print(p_1_ones) p_0_ones = ones_counter[0] / len(ones) print(p_0_ones) . 0.8571428571428571 0.14285714285714285 . The probability of picking up a zero in ones is low, the surprise is high. . zeros_counter = Counter(zeros) p_1_zeros = zeros_counter[1] / len(zeros) print(p_1_zeros) p_0_zeros = zeros_counter[0] / len(zeros) print(p_0_zeros) . 0.1 0.9 . zeros_counter = Counter(equal) p_1_equal = zeros_counter[1] / len(equal) print(p_1_equal) p_0_equal = zeros_counter[0] / len(equal) print(p_0_equal) . 0.5 0.5 . How is Surprise related to probability? . def surprise(probability): return np.log2(1/probability) . plot_function(surprise, tx=&#39;Probabity&#39;, ty=&#39;Surprise&#39;, title=&#39;Surprise vs Entropy&#39; ,min=0, max=1) . P_h = 0.9 P_t = 0.1 . S_h = surprise(P_h); S_h . 0.15200309344505006 . S_t = surprise(P_t); S_t . 3.321928094887362 . surprise(P_h * P_h * P_t) . 3.6259342817774622 . S_h + S_h + S_t . 3.6259342817774622 . assert surprise(P_h * P_h * P_t) == (S_h + S_h + S_t) . Calculate Entropy from Surprise . Entropy is the expected value of Surprise. $Entropy$ = $ sum$ $ frac{1}{log(p(x))}$ $ ast$ $p(x)$ . table = pd.DataFrame({&#39;Heads&#39;: [.15, .9], &#39;Tails&#39;: [3.32, .1]}, index=[&#39;Surprise&#39;,&#39;Probability&#39;]); table . Heads Tails . Surprise 0.15 | 3.32 | . Probability 0.90 | 0.10 | . table.loc[&#39;Probability&#39;, &#39;Heads&#39;] . 0.9 . Entropy = table.loc[&#39;Surprise&#39;, &#39;Heads&#39;] * table.loc[&#39;Probability&#39;, &#39;Heads&#39;] + table.loc[&#39;Surprise&#39;, &#39;Tails&#39;] * table.loc[&#39;Probability&#39;, &#39;Tails&#39;] Entropy . 0.467 . def entropy(arr): return -1 * x * np.log(x) . plot_function(entropy, tx=&#39;Probabity&#39;, ty=&#39;Surprise&#39;, title=&#39;Surprise vs Entropy&#39; ,min=0, max=1); . /usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:1: RuntimeWarning: divide by zero encountered in log &#34;&#34;&#34;Entry point for launching an IPython kernel. . Calculate the entropy of our arrrays . def entropy(arr): ent = 0 probs = dict() ctr = Counter(arr) for e in ctr: probs[f&#39;P_{e}&#39;] = ctr[e] / len(arr) for p in probs: ent += -1 * probs[p] * np.log2(probs[p]) return round(ent, 2) . entropy(ones) . 0.59 . entropy(zeros) . 0.47 . entropy(equal) . 1.0 .",
            "url": "https://magicaditya.github.io/mlexplained/2021/08/25/Entropy.html",
            "relUrl": "/2021/08/25/Entropy.html",
            "date": " • Aug 25, 2021"
        }
        
    
  
    
        ,"post1": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://magicaditya.github.io/mlexplained/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://magicaditya.github.io/mlexplained/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://magicaditya.github.io/mlexplained/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}